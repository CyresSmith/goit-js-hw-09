{"mappings":"oeAAAA,EAAA,S,iBAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,SAAUL,SAASC,cAAc,kBAuBnC,IAAIK,EAAuB,GAgB3B,SAASC,EAAeC,GACtBA,EAAMC,SAAQC,IACZ,MAAMC,gBAAEA,EAAeC,aAAEA,GAAiBF,EAtC9C,IAAuBG,EAAUX,EAAVW,EAuCLF,EAvCeT,EAuCEU,EArC1B,IAAIE,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KAEaC,KAAKC,SAAW,GAGpCJ,EAAQK,EAAAC,OAAOC,QAAQ,qBAAqBT,QAAeX,QAG3Dc,EAAOI,EAAAC,OAAOE,QAAQ,oBAAoBV,QAAeX,OAAW,GAGrEA,EAAM,IAERsB,OAAOC,OAAMC,GAAKA,GAsByB,G,CALhD5B,EAAKC,KAAK4B,iBAAiB,SAZ3B,WACE,IAAIzB,EAAQ0B,OAAO9B,EAAKI,MAAM2B,OAC1B1B,EAAOyB,OAAO9B,EAAKK,KAAK0B,OACxBzB,EAASwB,OAAO9B,EAAKM,OAAOyB,OAEhCvB,EAAuB,CAAC,CAAEK,gBAAiB,EAAGC,aAAcV,IAE5D,IAAK,IAAI4B,EAAI,EAAGA,GAAK1B,EAAQ0B,IAC3BxB,EAAqByB,KAAK,CAACpB,gBAAiBmB,EAAGlB,aAAcV,GAASC,G,IAmB1EL,EAAKO,SAASsB,iBAAiB,SANX,KAClBK,MAAMC,iBACN1B,EAAeD,GACfR,EAAKC,KAAKmC,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = { \n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  startBtn: document.querySelector('.button.start'),  \n}\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {   \n      \n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {        \n        resolve(Notify.success(`Fulfilled promise ${position} in ${delay}ms`));\n      }\n      else {\n        reject(Notify.failure(`Rejected promise ${position} in ${delay}ms`));\n      }\n      \n    }, delay);\n\n  }).then().catch(e => e);\n}\n\nlet PromisesOptionsArray = [];\n\nfunction createPromisesOptionsArray() {\n  let delay = Number(refs.delay.value);\n  let step = Number(refs.step.value);\n  let amount = Number(refs.amount.value);\n\n  PromisesOptionsArray = [{ PromisePosition: 1, PromiseDelay: delay }];\n  \n  for (let i = 2; i <= amount; i++) {\n    PromisesOptionsArray.push({PromisePosition: i, PromiseDelay: delay += step,})    \n  }\n}\n\nrefs.form.addEventListener('input', createPromisesOptionsArray);\n\nfunction RenderPromises(array) {\n  array.forEach(element => {\n    const { PromisePosition, PromiseDelay } = element;\n    createPromise(PromisePosition, PromiseDelay);\n  });  \n}\n\nconst startRender = () => {\n  event.preventDefault()\n  RenderPromises(PromisesOptionsArray)\n  refs.form.reset()\n};\n\nrefs.startBtn.addEventListener('click', startRender);"],"names":["parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","startBtn","$47d4ff9957288465$var$PromisesOptionsArray","$47d4ff9957288465$var$RenderPromises","array","forEach","element","PromisePosition","PromiseDelay","position","Promise","resolve","reject","setTimeout","Math","random","$iQIUW","Notify","success","failure","then","catch","e","addEventListener","Number","value","i","push","event","preventDefault","reset"],"version":3,"file":"03-promises.9c2bfcbf.js.map"}