{"mappings":"gfAAAA,EAAA,S,iBAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,SAAUL,SAASC,cAAc,kBA6CnCH,EAAKO,SAASC,iBAAiB,SAtB/B,SAA6BC,GAE3BC,MAAMC,iBAENP,MAAQQ,OAAOZ,EAAKI,MAAMS,OAC1BR,KAAOO,OAAOZ,EAAKK,KAAKQ,OACxBP,OAASM,OAAOZ,EAAKM,OAAOO,OAE5Bb,EAAKC,KAAKa,QAIV,IAFA,IAAIC,EAAuB,CAAC,CAACC,gBAAiB,EAAGC,aAAcb,QAEtDc,EAAI,EAAGA,GAAKZ,OAAQY,IAC3BH,EAAqBI,KAAK,CAACH,gBAAiBE,EAAGD,aAAcb,OAASC,OAGxEU,EAAqBK,SAAQ,SAAAC,IApC/B,SAAuBC,EAAUlB,GAExB,IAAImB,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WAEaC,KAAKC,SAAW,GAGpCJ,EAAQK,EAAAC,OAAOC,QAAQ,qBAAoCC,OAAfV,EAAS,QAAYU,OAAN5B,EAAM,QAGjEqB,EAAOI,EAAAC,OAAOG,QAAQ,oBAAmCD,OAAfV,EAAS,QAAYU,OAAN5B,EAAM,O,GAGhEA,E,IAEF8B,OAAOC,OAAM,SAAA1B,G,OAAKA,C,IAqBnB2B,CAD0Cf,EAAlCL,gBAAkCK,EAAjBJ,a","sources":["src/js/03-promises.js"],"sourcesContent":["import { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = { \n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  startBtn: document.querySelector('.button.start'),  \n}\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {   \n      \n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {        \n        resolve(Notify.success(`Fulfilled promise ${position} in ${delay}ms`));\n      }\n      else {\n        reject(Notify.failure(`Rejected promise ${position} in ${delay}ms`));\n      }\n      \n    }, delay);\n\n  }).then().catch(e => e);\n}\n\nfunction startRenderPromises(e) {\n\n  event.preventDefault()\n\n  delay = Number(refs.delay.value);\n  step = Number(refs.step.value);\n  amount = Number(refs.amount.value);\n\n  refs.form.reset()\n\n  let PromisesOptionsArray = [{PromisePosition: 1, PromiseDelay: delay}];\n\n  for (let i = 2; i <= amount; i++) {\n    PromisesOptionsArray.push({PromisePosition: i, PromiseDelay: delay += step,})    \n  }\n\n  PromisesOptionsArray.forEach(element => {\n    const { PromisePosition, PromiseDelay } = element;\n    createPromise(PromisePosition, PromiseDelay);\n  });  \n}\n\nrefs.startBtn.addEventListener('click', startRenderPromises);"],"names":["parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","startBtn","addEventListener","e","event","preventDefault","Number","value","reset","PromisesOptionsArray","PromisePosition","PromiseDelay","i","push","forEach","element","position","Promise","resolve","reject","setTimeout","Math","random","$h6c0i","Notify","success","concat","failure","then","catch","$ce04d3a99e08e73b$var$createPromise"],"version":3,"file":"03-promises.deb8f79b.js.map"}